name: CMake Build

on: [ push, pull_request ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: { }

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: 'windows-latest'
            preset: 'windows-x64-release'
          - os: 'ubuntu-latest'
            preset: 'linux-release'
          - os: 'macos-latest'
            preset: 'macos-arm64-release'

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Get cmake and ninja
      uses: lukka/get-cmake@latest

    - name: Find MSVC (Windows)
      uses: ilammy/msvc-dev-cmd@v1
      with:
        spectre: true

    - name: Install packages (Linux)
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt-get update
        sudo ./Misc/setup-linux-dev-env.sh

    - name: Restore artifacts, or setup vcpkg (do not install any package)
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgDirectory: external/vcpkg/vcpkg
        vcpkgJsonGlob: cmake/vcpkg.json
        prependedCacheKey: "build/${{ matrix.preset }}"

    - name: Configure
      run: cmake -B build --preset ${{ matrix.preset }}

    - name: Block cache on failure
      if: ${{ failure() || cancelled() }}
      shell: bash
      run: echo "RUNVCPKG_NO_CACHE=1" >> $GITHUB_ENV

    - name: Build
      run: cmake --build build

    - name: Test
      run: cmake --build build --target test

